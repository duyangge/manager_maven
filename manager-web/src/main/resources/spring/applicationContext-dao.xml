<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">
       
       <!--加载数据源配置文件properties  -->
       <context:property-placeholder location="classpath:resource/db.properties"/>
       
       <!--配置数据源  -->
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        	<property name="url" value="${jdbc.url}"/>
        	<property name="username" value="${jdbc.username}"/>
		    <property name="password" value="${jdbc.password}"/>
        	<property name="driverClassName" value="${jdbc.driverClassName}"/>
        	<property name="maxActive" value="${jdbc.maxActive}"/>
        	<property name="minIdle" value="${jdbc.minIdle}"/>
       </bean>
       
       <!--spring容器创建sqlSessionFactory  --> 
      <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      		<!--加载Mapper的配置文件  -->
      		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
      		<!--加载数据源  -->
      		<property name="dataSource" ref="dataSource"/>
      		<!--批量定义别名指定包名：
      		mybatis自动扫描包中的po类，自动定义别名，别名就是类名（首字母大学或小写都可以，一般小写）  -->
      		<property name="typeAliasesPackage" value="com.pxxy.pojo"/>
      		
      		<!-- mapper映射文件与其接口文件不在同一目录 时，需要导入-->
      		<!-- <property name="mapperLocations" value="classpath:mappers/*.xml"></property> -->
      </bean>

        <!--mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册  -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        		<!-- 指定扫描的包名 ,在sqlMapper.xml中就不用在导入xml文件了
        			如果扫描多个包，每个包中间使用半角逗号隔开.
        		-->
        		<property name="basePackage" value="com.pxxy.mapper"/>
        		
        		<!--不能直接使用sqlSessionFactory，
        		否则就会使先加载mapper,dataSource中properties后加载  ，导致数据库连接失败
        		-->
        		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        </bean>
        
        <!--  使用逆向工程生成mapper和po类  -->
        
</beans>